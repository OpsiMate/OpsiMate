FROM node:20-alpine AS client-builder

RUN npm install -g pnpm typescript && npm cache clean --force
WORKDIR /app

# Copy workspace manifests for caching
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/client/package.json apps/client/package.json
COPY packages/shared/package.json packages/shared/package.json
COPY packages/custom-actions/package.json packages/custom-actions/package.json

# Install deps (client + shared)
RUN pnpm install --frozen-lockfile && \
    if [ "$(uname -m)" = "aarch64" ]; then pnpm add @rollup/rollup-linux-arm64-musl --save-dev --filter @OpsiMate/client; fi && \
    pnpm store prune

# Copy sources
COPY apps/client apps/client
COPY packages/shared packages/shared
COPY packages/custom-actions packages/custom-actions

# Build shared package first, then client
RUN pnpm --filter @OpsiMate/shared build && \
    pnpm --filter @OpsiMate/custom-actions build && \
    pnpm --filter @OpsiMate/client build

# Production runtime
FROM node:20-alpine AS client-runtime
RUN npm install -g serve && npm cache clean --force
WORKDIR /app

# Copy built client and minimal workspace files
COPY --from=client-builder /app/apps/client/dist apps/client/dist
COPY --from=client-builder /app/apps/client/package.json apps/client/package.json
COPY --from=client-builder /app/package.json package.json
COPY --from=client-builder /app/pnpm-lock.yaml pnpm-lock.yaml
COPY --from=client-builder /app/pnpm-workspace.yaml pnpm-workspace.yaml
COPY --from=client-builder /app/packages/shared/package.json packages/shared/package.json
COPY --from=client-builder /app/packages/shared/dist packages/shared/dist
COPY --from=client-builder /app/packages/custom-actions/package.json packages/custom-actions/package.json
COPY --from=client-builder /app/packages/custom-actions/dist packages/custom-actions/dist

# Install only production deps
COPY --from=client-builder /app/node_modules ./node_modules

# Ensure workspace link for shared
RUN mkdir -p node_modules/@OpsiMate && \
    ln -sf /app/packages/shared node_modules/@OpsiMate/shared && \
    ln -sf /app/packages/custom-actions node_modules/@OpsiMate/custom-actions

EXPOSE 8080
ENV NODE_ENV=production
CMD ["serve", "-s", "/app/apps/client/dist", "-l", "8080"]