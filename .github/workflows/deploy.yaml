name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Enable pnpm
        run: corepack enable

      - name: Prepare pnpm
        run: corepack prepare pnpm@9.12.0 --activate

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Download build artifacts from CI
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./artifacts/

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r apps/server/dist deployment/server
          cp -r apps/client/dist deployment/client
          cp -r packages/shared/dist deployment/shared
          cp package.json deployment/
          cp pnpm-lock.yaml deployment/
          cp docker-compose.yml deployment/ || true
          cp Dockerfile deployment/ || true
          cp Dockerfile.server deployment/ || true
          cp Dockerfile.client deployment/ || true

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment/
          retention-days: 30

      # Example: Deploy to a server (uncomment and configure as needed)
      # - name: Deploy to production
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd /path/to/your/app
      #       docker-compose down
      #       docker-compose up -d --build

      # Example: Deploy to Docker Hub (uncomment and configure as needed)
      # - name: Build and push Docker images
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       opsimate/server:latest
      #       opsimate/client:latest
      #       opsimate/server:${{ github.sha }}
      #       opsimate/client:${{ github.sha }}
