name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version type (patch, minor, major)"
        required: false
        default: patch

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine Version Type
      id: version_type
      run: |
        TYPE="${{ github.event.inputs.version_type }}"
        if [ -z "$TYPE" ]; then
          TYPE="patch"
        fi
        echo "Using version type: $TYPE"
        echo "type=$TYPE" >> $GITHUB_OUTPUT

    - name: Get and Bump Version
      id: version
      run: |
        LATEST=$(curl -s https://api.github.com/repos/opsimate/opsimate/releases/latest | jq -r '.tag_name' | sed 's/^v//')
        IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST"

        case "${{ steps.version_type.outputs.type }}" in
          major)
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          minor)
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          patch|*)
            PATCH=$((PATCH + 1))
            ;;
        esac

        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: opsimate
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker Image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t opsimate/opsimate:${{ steps.version.outputs.version }} \
          -t opsimate/opsimate:latest \
          --push .

    - name: Update Release Draft
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
